from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
from openpyxl.workbook import Workbook
import time
import pandas as pd

browser = webdriver.Chrome(executable_path='C:/Users/Haydar/Desktop/chromedriver')

#ClosePopUP
def pop_up():
    pop_up = browser.find_element_by_xpath('//*[@id="app"]/div/div[4]/div[2]/div/div[2]/div/div[2]/div[2]/div[2]/div[1]/div[2]/div[3]')
    pop_up.click()
    time.sleep(7)
    print('pop up sudah close')

#Expand Detail Penerbangan
def expand_detail():
    panjang_expand = browser.find_elements_by_xpath('//div[@class="wrapper-flight-list"]')
    for i in range (len(panjang_expand)):
            expand_detail = browser.find_element_by_xpath('//div[@class="text-details list-horizontal__top"][contains(text(), "Detail Penerbangan")]')
            browser.execute_script("arguments[0].click();", expand_detail)
    print('Expand Sukses')
    
    #Set Loop and Data
df = pd.DataFrame()

def compile_data():
    global df
    global list_waktu_keberangkatan
    global list_kode_bandara_keberangkatan
    global list_waktu_kedatangan
    global list_kode_bandara_kedatangan
    global list_maskapai
    global list_harga
    global list_durasi_penerbangan
    global list_kode_penerbangan

    #waktu berangkat
    waktu_keberangkatan = browser.find_elements_by_xpath('//div[@class="text-time"]')
    list_waktu_keberangkatan = [value.text for value in waktu_keberangkatan]
    
    #kode bandara keberangkatan
    kode_bandara_keberangkatan = browser.find_elements_by_xpath('//div[@class="text-code"]')
    list_kode_bandara_keberangkatan = [value.text for value in kode_bandara_keberangkatan]
    
    #waktu kedatangan
    waktu_kedatangan = browser.find_elements_by_xpath('//div[@class="text-time"]')
    list_waktu_kedatangan = [value.text for value in waktu_kedatangan]
    
    #kode bandara kedatangan
    kode_bandara_kedatangan = browser.find_elements_by_xpath('//div[@class="text-code"]')
    list_kode_bandara_kedatangan = [value.text for value in kode_bandara_kedatangan]
    
    #nama maskapai
    maskapai = browser.find_elements_by_xpath('//span[@class="text-marketing-airline"]')
    list_maskapai = [value.text for value in maskapai]
    
    #kode penerbangan
    kode_penerbangan = browser.find_elements_by_xpath('//div[@class="list-horizontal__middle header-title"]')
    list_kode_penerbangan = [value.text for value in kode_penerbangan]
    
    #harga
    harga = browser.find_elements_by_xpath('//div[@class="col-xs-7"]')
    list_harga = [value.text.split("IDR")[1] for value in harga]
    
    #durasi
    durasi = browser.find_elements_by_xpath('//th[@class="col-flight-detail-1 text-date-fd"]')
    list_durasi_penerbangan = [value.text for value in durasi]

    for i in range(len(list_waktu_keberangkatan)):
        try:
            df.loc[i, 'waktu_berangkat'] = list_waktu_keberangkatan[2*i]
        except Exception as e:
            pass
        try:
            df.loc[i, 'kode_bandara_keberangkatan'] = list_kode_bandara_keberangkatan[2*i]
        except Exception as e:
            pass
        try:
            df.loc[i, 'waktu_kedatangan'] = list_waktu_kedatangan[2*i+1]
        except Exception as e:
            pass
        try:
            df.loc[i, 'kode_bandara_kedatangan'] = list_kode_bandara_kedatangan[2*i+1]
        except Exception as e:
            pass
        try:
            df.loc[i, 'durasi'] = list_durasi_penerbangan[i]
        except Exception as e:
            pass
        try:
            df.loc[i, 'maskapai'] = list_maskapai[i]
        except Exception as e:
            pass
        try:
            df.loc[i, 'kode_penerbangan'] = list_kode_penerbangan[2*i]
        except Exception as e:
            pass
        try:
            df.loc[i, 'harga'] = list_harga[i]
        except Exception as e:
            pass
        
    print('Excel Sheet Telah dibuat')
    
    for i in range(1):
    link = 'https://www.tiket.com/pesawat/search?d=JKTC&a=JOGC&dType=CITY&aType=CITY&date=2020-11-30&adult=1&child=0&infant=0&class=economy&flexiFare=false&stops=direct'
    browser.get(link)
    time.sleep(1)
    
    #ClosePopUp
    pop_up()
    
    #ScrollKebawah
    for i in range(1, 8000, 10):
        browser.execute_script("window.scrollTo(0, window.scrollY + i)")
    print('Proses Scroll Success')  
    
    #Expand
    expand_detail()
    
    #Buka data
    compile_data()

    #Create Excel
    df.to_excel(r'D:/Kerjaan Kantor/Jakarta - Yogyakarta/Tanggal 30.xlsx', sheet_name='Tanggal 30', index=False)
